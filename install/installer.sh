#!/bin/bash

# Colores
BOLD="\e[1m"
CYAN="\e[36m"
YELLOW="\e[33m"
GREEN="\e[32m"
MAGENTA="\e[35m"
RED="\e[31m"
RESET="\e[0m"

# Iconos
OK_ICON="‚úÖ"
INFO_ICON="‚ÑπÔ∏è"
WARN_ICON="‚ö†Ô∏è"
TOOL_ICON="üõ†Ô∏è"

# Detectar sistema operativo y gestor de paquetes
detect_os() {
  if [[ -f /etc/debian_version ]]; then
    OS="Debian/Ubuntu"
    PKG_MANAGER="apt"
  elif [[ -f /etc/redhat-release ]]; then
    OS="RedHat/CentOS"
    # Preferimos dnf si est√° disponible
    if command -v dnf &> /dev/null; then
      PKG_MANAGER="dnf"
    else
      PKG_MANAGER="yum"
    fi
  else
    echo -e "${RED}‚ùå Sistema operativo no soportado.${RESET}"
    exit 1
  fi
}

# Instalar paquetes b√°sicos
install_basic_tools() {
  echo -e "${BOLD}${CYAN}Instalando herramientas b√°sicas...${RESET}"
  PACKAGES=(htop curl git vim net-tools wget unzip)

  echo -e "${INFO_ICON} Usando gestor de paquetes: ${YELLOW}$PKG_MANAGER${RESET}"
  echo -e "${INFO_ICON} Paquetes a instalar: ${YELLOW}${PACKAGES[*]}${RESET}"

  read -p "¬øQuer√©s continuar? [s/N]: " CONF
  CONF=${CONF,,} # to lowercase

  if [[ "$CONF" != "s" ]]; then
    echo -e "${WARN_ICON} Instalaci√≥n cancelada."
    return
  fi

  sudo $PKG_MANAGER update -y

  for pkg in "${PACKAGES[@]}"; do
    echo -e "${TOOL_ICON} Instalando $pkg..."
    sudo $PKG_MANAGER install -y "$pkg"
  done

  echo -e "${GREEN}${OK_ICON} Herramientas b√°sicas instaladas con √©xito.${RESET}"
}

# Men√∫ principal
while true; do
  clear
  detect_os
  echo -e "${MAGENTA}==============================================${RESET}"
  echo -e "${MAGENTA}  ${BOLD}üõ†Ô∏è Instalador de Servicios para Sysadmin Linux${RESET}"
  echo -e "${MAGENTA}==============================================${RESET}"
  echo -e "${CYAN}Sistema detectado:${YELLOW} $OS${RESET}"
  echo
  echo -e "${YELLOW}Seleccion√° una categor√≠a:${RESET}"
  echo -e " 1) üß∞ Herramientas b√°sicas del sistema"
  echo -e " 2) üåê Servicios de red (DNS, NFS, SMTP, HTTP)"
  echo -e " 3) üîç Monitoreo (Nagios, Centreon)"
  echo -e " 4) ‚òÅÔ∏è Backup y almacenamiento"
  echo -e " 5) üîê Seguridad y acceso (Firewall, Fail2ban, SSH)"
  echo -e " 6) üß™ Virtualizaci√≥n (KVM, libvirt, bridge)"
  echo -e " 7) ‚ùå Salir"
  echo -ne "\nIngres√° opci√≥n: "
  read -r OPTION

  case $OPTION in
    1)
      install_basic_tools
      ;;
    2|3|4|5|6)
      echo -e "${WARN_ICON} üîß Esta funci√≥n ser√° agregada pr√≥ximamente..."
      ;;
    7)
      echo -e "${GREEN}Saliendo...${RESET}"
      exit 0
      ;;
    *)
      echo -e "${RED}‚ùå Opci√≥n inv√°lida, intent√° de nuevo.${RESET}"
      ;;
  esac

  echo -e "\nPresion√° ENTER para continuar..."
  read -r
done

